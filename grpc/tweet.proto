syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = '/grpc';

package tweet.v1;

// つぶやきのCRUD操作に対応するservice型
service TweetService {
  rpc ListTweet(google.protobuf.Empty) returns (ListTweetsResponse);
  // つぶやきを作成するメソッド
  rpc CreateTweet(CreateTweetRequest) returns (CreateTweetResponse);
}

// つぶやき情報を表すmessage型
message Tweet {
  string id = 1; // つぶやきの一意なID (UUID)
  string user_id = 2; // つぶやきを投稿したユーザーのID (UUID)
  string body = 3; // つぶやきの本文
  google.protobuf.Timestamp created_at = 4; // つぶやき作成日時
  google.protobuf.Timestamp updated_at = 5; // つぶやき情報更新日時
}


message ListTweetsResponse {
  repeated Tweet tweets = 1; // つぶやきのリスト
}

// つぶやきを作成するためのリクエストmessage型
message CreateTweetRequest {
  string user_id = 1; // つぶやきを投稿するユーザーのID
  string body = 2; // つぶやきの本文
}

// つぶやきを作成した結果を返すレスポンスmessage型
message CreateTweetResponse {
  Tweet tweet = 1; // 作成されたつぶやきの情報
}

// つぶやきを取得するためのリクエストmessage型
message GetTweetRequest {
  string id = 1; // つぶやきの一意なID
}

// つぶやきを取得した結果を返すレスポンスmessage型
message GetTweetResponse {
  Tweet tweet = 1; // 取得されたつぶやきの情報
}

// つぶやきを更新するためのリクエストmessage型
message UpdateTweetRequest {
  string id = 1; // つぶやきの一意なID
  string user_id = 2; // つぶやきを投稿したユーザーのID
  string body = 3; // つぶやきの本文
}

// つぶやきを更新した結果を返すレスポンスmessage型
message UpdateTweetResponse {
  Tweet tweet = 1; // 更新されたつぶやきの情報
}

// つぶやきを削除するためのリクエストmessage型
message DeleteTweetRequest {
  string id = 1; // つぶやきの一意なID
}